# -*- coding: utf-8 -*-
"""03_Modeling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xdn6bIX8JPTFcAwwCt6wzQwe2HOatYke
"""

# ========================
# Google Colab: Evaluate Random Forest Model
# ========================
import pandas as pd
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import joblib
from google.colab import files

# ---------------------------
# 1. Upload the trained model
# ---------------------------
print("Upload your trained model (.pkl):")
uploaded_model = files.upload()  # This will open a file dialog
model_filename = list(uploaded_model.keys())[0]

# Load the model
model = joblib.load(model_filename)
print(f"✅ Model '{model_filename}' loaded successfully!")

# ---------------------------
# 2. Upload dataset for evaluation
# ---------------------------
print("\nUpload dataset CSV for evaluation (must include target column 'Churn_Yes'):")
uploaded_data = files.upload()
data_filename = list(uploaded_data.keys())[0]

# Load dataset
df = pd.read_csv(data_filename)
print(f"✅ Dataset '{data_filename}' loaded successfully!")
display(df.head())

# ---------------------------
# 3. Split features & target
# ---------------------------
if 'Churn_Yes' not in df.columns:
    raise ValueError("The uploaded CSV must have a column named 'Churn_Yes' as the target.")

# If the target column is found, proceed with splitting and evaluation
X = df.drop('Churn_Yes', axis=1)
y = df['Churn_Yes']

# ---------------------------
# 4. Make predictions
# ---------------------------
y_pred = model.predict(X)

# ---------------------------
# 5. Evaluate
# ---------------------------
print("\n✅ Model Evaluation Results:")
print("Accuracy:", accuracy_score(y, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y, y_pred))
print("\nClassification Report:\n", classification_report(y, y_pred))

# ---------------------------
# 6. Save predictions
# ---------------------------
df['Predicted_Churn'] = y_pred
df.to_csv("evaluation_results.csv", index=False)
print("✅ Evaluation results saved as 'evaluation_results.csv'")

# Download the file in Colab
files.download("evaluation_results.csv")